name: Publish NuGet Package

# Trigger the workflow when a tag matching 'v*' is pushed (e.g., v1.0.1)
on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Validate the tag version (semantic versioning like v1.0.1)
      - name: Validate version
        run: |
          if [[ ! ${{ github.ref }} =~ ^refs/tags/v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "Invalid version tag!"
            exit 1
          fi

      # Step 2: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 3: Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Use .NET version 8.0

      # Step 4: Restore project dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 5: Run tests to ensure code quality
      - name: Run tests
        run: dotnet test --configuration Release --no-restore --no-build

      # Step 6: Build the project in Release mode
      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      # Step 7: Pack the NuGet package
      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build

      # Step 8: Push the package to nuget.org
      - name: Push to nuget.org
        run: dotnet nuget push "bin/Release/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

      # Step 9: Add GitHub Package Registry as a source
      - name: Add GitHub Packages source
        run: dotnet nuget add source --username ray-vinod --password ${{ secrets.TOKEN_SECRET }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/ray-vinod/index.json"

      # Step 10: Push the package to GitHub Packages
      - name: Push to GitHub Packages
        run: dotnet nuget push "bin/Release/*.nupkg" --source github --api-key ${{ secrets.TOKEN_SECRET }}

      # Step 11: Notify on failure (optional)
      - name: Notify on failure
        if: failure()
        run: echo "Publishing to NuGet failed!"